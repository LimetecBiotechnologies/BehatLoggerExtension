#!/usr/bin/env php
<?php
/**
 * Created by PhpStorm.
 * User: aappen
 * Date: 10.08.18
 * Time: 03:00
 */

use seretos\BehatLoggerExtension\Command\CombineLogsCommand;
use seretos\BehatLoggerExtension\Command\FeatureToLogCommand;
use seretos\BehatLoggerExtension\Command\ValidateExecutionCommand;
use seretos\BehatLoggerExtension\Command\ValidateScenarioTitleCommand;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\Console\Application;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;

foreach (array(__DIR__ . '/../../autoload.php',__DIR__ . '/../autoload.php', __DIR__ . '/vendor/autoload.php') as $file) {
    if (file_exists($file)) {
        require $file;

        break;
    }
}

try {
    $container = new ContainerBuilder();
    $loader = new YamlFileLoader($container, new FileLocator(__DIR__.'/Resources/config'));
    $loader->load('services.yml');

    $combineLogsCommand = new CombineLogsCommand();
    $combineLogsCommand->setContainer($container);

    $featureToLogCommand = new FeatureToLogCommand();
    $featureToLogCommand->setContainer($container);

    $validateScenarioTitleCommand = new ValidateScenarioTitleCommand();
    $validateScenarioTitleCommand->setContainer($container);

    $validateExecutionCommand = new ValidateExecutionCommand();
    $validateExecutionCommand->setContainer($container);

    $app = new Application('behat-logger-cli',$container->getParameter('behat_logger_version'));
    $app->addCommands([$combineLogsCommand,$featureToLogCommand,$validateScenarioTitleCommand]);

    $app->run();
}catch (Exception $e){
    syslog(LOG_CRIT,$e->getMessage());
}